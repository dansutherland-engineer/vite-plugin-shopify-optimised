import { graphqlRequestDoc } from './graphql.js';
import { appManagementFqdn } from '../context/fqdn.js';
import Bottleneck from 'bottleneck';
// API Rate limiter
// Jobs are launched every 150ms
// Only 10 requests can be executed concurrently.
const limiter = new Bottleneck({
    minTime: 150,
    maxConcurrent: 10,
});
/**
 * Executes an org-scoped GraphQL query against the App Management API.
 * Uses typed documents.
 *
 * @param organizationId - Organization ID required to check permissions.
 * @param query - GraphQL query to execute.
 * @param token - Partners token.
 * @param variables - GraphQL variables to pass to the query.
 * @returns The response of the query of generic type <T>.
 */
export async function webhooksRequest(organizationId, query, token, variables) {
    const api = 'Webhooks';
    const fqdn = await appManagementFqdn();
    const url = `https://${fqdn}/webhooks/unstable/organizations/${organizationId}/graphql.json`;
    const result = limiter.schedule(() => graphqlRequestDoc({
        query,
        api,
        url,
        token,
        variables,
    }));
    return result;
}
//# sourceMappingURL=webhooks.js.map