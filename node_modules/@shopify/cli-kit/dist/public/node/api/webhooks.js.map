{"version":3,"file":"webhooks.js","sourceRoot":"","sources":["../../../../src/public/node/api/webhooks.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,iBAAiB,EAAC,MAAM,cAAc,CAAA;AAC9C,OAAO,EAAC,iBAAiB,EAAC,MAAM,oBAAoB,CAAA;AACpD,OAAO,UAAU,MAAM,YAAY,CAAA;AAInC,mBAAmB;AACnB,gCAAgC;AAChC,iDAAiD;AACjD,MAAM,OAAO,GAAG,IAAI,UAAU,CAAC;IAC7B,OAAO,EAAE,GAAG;IACZ,aAAa,EAAE,EAAE;CAClB,CAAC,CAAA;AAEF;;;;;;;;;GASG;AACH,MAAM,CAAC,KAAK,UAAU,eAAe,CACnC,cAAsB,EACtB,KAA6C,EAC7C,KAAa,EACb,SAAsB;IAEtB,MAAM,GAAG,GAAG,UAAU,CAAA;IACtB,MAAM,IAAI,GAAG,MAAM,iBAAiB,EAAE,CAAA;IACtC,MAAM,GAAG,GAAG,WAAW,IAAI,oCAAoC,cAAc,eAAe,CAAA;IAC5F,MAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAU,GAAG,EAAE,CAC5C,iBAAiB,CAAsB;QACrC,KAAK;QACL,GAAG;QACH,GAAG;QACH,KAAK;QACL,SAAS;KACV,CAAC,CACH,CAAA;IAED,OAAO,MAAM,CAAA;AACf,CAAC","sourcesContent":["import {graphqlRequestDoc} from './graphql.js'\nimport {appManagementFqdn} from '../context/fqdn.js'\nimport Bottleneck from 'bottleneck'\nimport {Variables} from 'graphql-request'\nimport {TypedDocumentNode} from '@graphql-typed-document-node/core'\n\n// API Rate limiter\n// Jobs are launched every 150ms\n// Only 10 requests can be executed concurrently.\nconst limiter = new Bottleneck({\n  minTime: 150,\n  maxConcurrent: 10,\n})\n\n/**\n * Executes an org-scoped GraphQL query against the App Management API.\n * Uses typed documents.\n *\n * @param organizationId - Organization ID required to check permissions.\n * @param query - GraphQL query to execute.\n * @param token - Partners token.\n * @param variables - GraphQL variables to pass to the query.\n * @returns The response of the query of generic type <T>.\n */\nexport async function webhooksRequest<TResult, TVariables extends Variables>(\n  organizationId: string,\n  query: TypedDocumentNode<TResult, TVariables>,\n  token: string,\n  variables?: TVariables,\n): Promise<TResult> {\n  const api = 'Webhooks'\n  const fqdn = await appManagementFqdn()\n  const url = `https://${fqdn}/webhooks/unstable/organizations/${organizationId}/graphql.json`\n  const result = limiter.schedule<TResult>(() =>\n    graphqlRequestDoc<TResult, TVariables>({\n      query,\n      api,\n      url,\n      token,\n      variables,\n    }),\n  )\n\n  return result\n}\n"]}