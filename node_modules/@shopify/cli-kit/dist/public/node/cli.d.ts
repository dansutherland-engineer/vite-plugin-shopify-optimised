/// <reference types="node" resolution-mode="require"/>
/**
 * IMPORTANT NOTE: Imports in this module are dynamic to ensure that "setupEnvironmentVariables" can dynamically
 * set the DEBUG environment variable before the 'debug' package sets up its configuration when modules
 * are loaded statically.
 */
interface RunCLIOptions {
    /** The value of import.meta.url of the CLI executable module */
    moduleURL: string;
    development: boolean;
}
/**
 * A function that abstracts away setting up the environment and running
 * a CLI
 * @param options - Options.
 */
export declare function runCLI(options: RunCLIOptions & {
    runInCreateMode?: boolean;
}, launchCLI?: (options: {
    moduleURL: string;
}) => Promise<void>, argv?: string[], env?: NodeJS.ProcessEnv, versions?: NodeJS.ProcessVersions): Promise<void>;
/**
 * A function for create-x CLIs that automatically runs the "init" command.
 */
export declare function runCreateCLI(options: RunCLIOptions, launchCLI?: (options: {
    moduleURL: string;
}) => Promise<void>, argv?: string[], env?: NodeJS.ProcessEnv, versions?: NodeJS.ProcessVersions): Promise<void>;
/**
 * An object that contains the flags that
 * are shared across all the commands.
 */
export declare const globalFlags: {
    'no-color': import("@oclif/core/lib/interfaces/parser.js").BooleanFlag<boolean>;
    verbose: import("@oclif/core/lib/interfaces/parser.js").BooleanFlag<boolean>;
};
export declare const jsonFlag: {
    json: import("@oclif/core/lib/interfaces/parser.js").BooleanFlag<boolean>;
};
/**
 * Clear the CLI cache, used to store some API responses and handle notifications status
 */
export declare function clearCache(): void;
export {};
