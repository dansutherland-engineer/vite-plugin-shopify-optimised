{"version":3,"file":"cli.js","sourceRoot":"","sources":["../../../src/public/node/cli.ts"],"names":[],"mappings":"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","sourcesContent":["import {isTruthy} from './context/utilities.js'\nimport {launchCLI as defaultLaunchCli} from './cli-launcher.js'\nimport {cacheClear} from '../../private/node/conf-store.js'\nimport {environmentVariables} from '../../private/node/constants.js'\nimport {Flags} from '@oclif/core'\n\n/**\n * IMPORTANT NOTE: Imports in this module are dynamic to ensure that \"setupEnvironmentVariables\" can dynamically\n * set the DEBUG environment variable before the 'debug' package sets up its configuration when modules\n * are loaded statically.\n */\ninterface RunCLIOptions {\n  /** The value of import.meta.url of the CLI executable module */\n  moduleURL: string\n  development: boolean\n}\n\nasync function warnIfOldNodeVersion(versions: NodeJS.ProcessVersions = process.versions) {\n  const nodeVersion = versions.node\n  const nodeMajorVersion = Number(nodeVersion.split('.')[0])\n\n  const currentSupportedNodeVersion = 18\n  if (nodeMajorVersion < currentSupportedNodeVersion) {\n    const {renderWarning} = await import('./ui.js')\n    renderWarning({\n      headline: 'Upgrade to a supported Node version now.',\n      body: [\n        `Node ${nodeMajorVersion} has reached end-of-life and poses security risks. When you upgrade to a`,\n        {\n          link: {\n            url: 'https://nodejs.dev/en/about/previous-releases',\n            label: 'supported version',\n          },\n        },\n        {char: ','},\n        \"you'll be able to use Shopify CLI without interruption.\",\n      ],\n    })\n  }\n}\n\nfunction setupEnvironmentVariables(\n  options: Pick<RunCLIOptions, 'development'>,\n  argv: string[] = process.argv,\n  env: NodeJS.ProcessEnv = process.env,\n) {\n  /**\n   * By setting DEBUG=* when --verbose is passed we are increasing the\n   * verbosity of oclif. Oclif uses debug (https://www.npmjs.com/package/debug)\n   * for logging, and it's configured through the DEBUG= environment variable.\n   */\n  if (argv.includes('--verbose')) {\n    env.DEBUG = env.DEBUG ?? '*'\n  }\n  if (options.development) {\n    env.SHOPIFY_CLI_ENV = env.SHOPIFY_CLI_ENV ?? 'development'\n  }\n}\n\nfunction forceNoColor(argv: string[] = process.argv, env: NodeJS.ProcessEnv = process.env) {\n  if (\n    argv.includes('--no-color') ||\n    isTruthy(env.NO_COLOR) ||\n    isTruthy(env.SHOPIFY_FLAG_NO_COLOR) ||\n    env.TERM === 'dumb'\n  ) {\n    env.FORCE_COLOR = '0'\n  }\n}\n\n/**\n * A function that abstracts away setting up the environment and running\n * a CLI\n * @param options - Options.\n */\nexport async function runCLI(\n  options: RunCLIOptions & {runInCreateMode?: boolean},\n  launchCLI: (options: {moduleURL: string}) => Promise<void> = defaultLaunchCli,\n  argv: string[] = process.argv,\n  env: NodeJS.ProcessEnv = process.env,\n  versions: NodeJS.ProcessVersions = process.versions,\n): Promise<void> {\n  setupEnvironmentVariables(options, argv, env)\n  if (options.runInCreateMode) {\n    await addInitToArgvWhenRunningCreateCLI(options, argv)\n  }\n  forceNoColor(argv, env)\n  await warnIfOldNodeVersion(versions)\n  return launchCLI({moduleURL: options.moduleURL})\n}\n\nasync function addInitToArgvWhenRunningCreateCLI(\n  options: Pick<RunCLIOptions, 'moduleURL'>,\n  argv: string[] = process.argv,\n): Promise<void> {\n  const {findUpAndReadPackageJson} = await import('./node-package-manager.js')\n  const {moduleDirectory} = await import('./path.js')\n\n  const packageJson = await findUpAndReadPackageJson(moduleDirectory(options.moduleURL))\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const packageName = (packageJson.content as any).name as string\n  const name = packageName.replace('@shopify/create-', '')\n  const initIndex = argv.findIndex((arg) => arg.includes('init'))\n  if (initIndex === -1) {\n    const initIndex = argv.findIndex((arg) => arg.match(new RegExp(`bin(\\\\/|\\\\\\\\)+(create-${name}|dev|run)`))) + 1\n    argv.splice(initIndex, 0, 'init')\n  }\n}\n\n/**\n * A function for create-x CLIs that automatically runs the \"init\" command.\n */\nexport async function runCreateCLI(\n  options: RunCLIOptions,\n  launchCLI: (options: {moduleURL: string}) => Promise<void> = defaultLaunchCli,\n  argv: string[] = process.argv,\n  env: NodeJS.ProcessEnv = process.env,\n  versions: NodeJS.ProcessVersions = process.versions,\n): Promise<void> {\n  return runCLI({...options, runInCreateMode: true}, launchCLI, argv, env, versions)\n}\n\n/**\n * An object that contains the flags that\n * are shared across all the commands.\n */\nexport const globalFlags = {\n  'no-color': Flags.boolean({\n    hidden: false,\n    description: 'Disable color output.',\n    env: 'SHOPIFY_FLAG_NO_COLOR',\n  }),\n  verbose: Flags.boolean({\n    hidden: false,\n    description: 'Increase the verbosity of the output.',\n    env: 'SHOPIFY_FLAG_VERBOSE',\n  }),\n}\n\nexport const jsonFlag = {\n  json: Flags.boolean({\n    char: 'j',\n    description: 'Output the result as JSON.',\n    hidden: false,\n    default: false,\n    env: environmentVariables.json,\n  }),\n}\n\n/**\n * Clear the CLI cache, used to store some API responses and handle notifications status\n */\nexport function clearCache(): void {\n  cacheClear()\n}\n"]}