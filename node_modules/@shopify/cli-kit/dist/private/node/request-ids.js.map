{"version":3,"file":"request-ids.js","sourceRoot":"","sources":["../../../src/private/node/request-ids.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,MAAM,eAAe,GAAG,GAAG,CAAA;AAElC;;GAEG;AACH,MAAM,mBAAmB;IAAzB;QAUU,eAAU,GAAa,EAAE,CAAA;IAyBnC,CAAC;IAhCC,MAAM,CAAC,WAAW;QAChB,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE;YACjC,mBAAmB,CAAC,QAAQ,GAAG,IAAI,mBAAmB,EAAE,CAAA;SACzD;QACD,OAAO,mBAAmB,CAAC,QAAQ,CAAA;IACrC,CAAC;IAID;;;OAGG;IACH,YAAY,CAAC,SAAoC;QAC/C,IAAI,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,eAAe,EAAE;YACzD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;SAChC;IACH,CAAC;IAED;;OAEG;IACH,aAAa;QACX,OAAO,IAAI,CAAC,UAAU,CAAA;IACxB,CAAC;IAED;;OAEG;IACH,KAAK;QACH,IAAI,CAAC,UAAU,GAAG,EAAE,CAAA;IACtB,CAAC;CACF;AAED,MAAM,CAAC,MAAM,oBAAoB,GAAG,mBAAmB,CAAC,WAAW,EAAE,CAAA","sourcesContent":["export const MAX_REQUEST_IDS = 100\n\n/**\n * Manages collection of request IDs during command execution\n */\nclass RequestIDCollection {\n  private static instance: RequestIDCollection\n\n  static getInstance(): RequestIDCollection {\n    if (!RequestIDCollection.instance) {\n      RequestIDCollection.instance = new RequestIDCollection()\n    }\n    return RequestIDCollection.instance\n  }\n\n  private requestIds: string[] = []\n\n  /**\n   * Add a request ID to the collection\n   * We only report the first MAX_REQUEST_IDS request IDs.\n   */\n  addRequestId(requestId: string | undefined | null) {\n    if (requestId && this.requestIds.length < MAX_REQUEST_IDS) {\n      this.requestIds.push(requestId)\n    }\n  }\n\n  /**\n   * Get all collected request IDs\n   */\n  getRequestIds(): string[] {\n    return this.requestIds\n  }\n\n  /**\n   * Clear all stored request IDs\n   */\n  clear() {\n    this.requestIds = []\n  }\n}\n\nexport const requestIdsCollection = RequestIDCollection.getInstance()\n"]}