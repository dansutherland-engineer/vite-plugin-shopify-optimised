export const MAX_REQUEST_IDS = 100;
/**
 * Manages collection of request IDs during command execution
 */
class RequestIDCollection {
    constructor() {
        this.requestIds = [];
    }
    static getInstance() {
        if (!RequestIDCollection.instance) {
            RequestIDCollection.instance = new RequestIDCollection();
        }
        return RequestIDCollection.instance;
    }
    /**
     * Add a request ID to the collection
     * We only report the first MAX_REQUEST_IDS request IDs.
     */
    addRequestId(requestId) {
        if (requestId && this.requestIds.length < MAX_REQUEST_IDS) {
            this.requestIds.push(requestId);
        }
    }
    /**
     * Get all collected request IDs
     */
    getRequestIds() {
        return this.requestIds;
    }
    /**
     * Clear all stored request IDs
     */
    clear() {
        this.requestIds = [];
    }
}
export const requestIdsCollection = RequestIDCollection.getInstance();
//# sourceMappingURL=request-ids.js.map