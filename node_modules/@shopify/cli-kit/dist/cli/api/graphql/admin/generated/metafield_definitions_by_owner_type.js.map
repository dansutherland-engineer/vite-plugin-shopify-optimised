{"version":3,"file":"metafield_definitions_by_owner_type.js","sourceRoot":"","sources":["../../../../../../src/cli/api/graphql/admin/generated/metafield_definitions_by_owner_type.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport * as Types from './types.js'\n\nimport {TypedDocumentNode as DocumentNode} from '@graphql-typed-document-node/core'\n\nexport type MetafieldDefinitionsByOwnerTypeQueryVariables = Types.Exact<{\n  ownerType: Types.MetafieldOwnerType\n}>\n\nexport type MetafieldDefinitionsByOwnerTypeQuery = {\n  metafieldDefinitions: {\n    nodes: {\n      key: string\n      name: string\n      namespace: string\n      description?: string | null\n      type: {category: string; name: string}\n    }[]\n  }\n}\n\nexport const MetafieldDefinitionsByOwnerType = {\n  kind: 'Document',\n  definitions: [\n    {\n      kind: 'OperationDefinition',\n      operation: 'query',\n      name: {kind: 'Name', value: 'metafieldDefinitionsByOwnerType'},\n      variableDefinitions: [\n        {\n          kind: 'VariableDefinition',\n          variable: {kind: 'Variable', name: {kind: 'Name', value: 'ownerType'}},\n          type: {kind: 'NonNullType', type: {kind: 'NamedType', name: {kind: 'Name', value: 'MetafieldOwnerType'}}},\n        },\n      ],\n      selectionSet: {\n        kind: 'SelectionSet',\n        selections: [\n          {\n            kind: 'Field',\n            name: {kind: 'Name', value: 'metafieldDefinitions'},\n            arguments: [\n              {\n                kind: 'Argument',\n                name: {kind: 'Name', value: 'ownerType'},\n                value: {kind: 'Variable', name: {kind: 'Name', value: 'ownerType'}},\n              },\n              {kind: 'Argument', name: {kind: 'Name', value: 'first'}, value: {kind: 'IntValue', value: '250'}},\n            ],\n            selectionSet: {\n              kind: 'SelectionSet',\n              selections: [\n                {\n                  kind: 'Field',\n                  name: {kind: 'Name', value: 'nodes'},\n                  selectionSet: {\n                    kind: 'SelectionSet',\n                    selections: [\n                      {kind: 'Field', name: {kind: 'Name', value: 'key'}},\n                      {kind: 'Field', name: {kind: 'Name', value: 'name'}},\n                      {kind: 'Field', name: {kind: 'Name', value: 'namespace'}},\n                      {kind: 'Field', name: {kind: 'Name', value: 'description'}},\n                      {\n                        kind: 'Field',\n                        name: {kind: 'Name', value: 'type'},\n                        selectionSet: {\n                          kind: 'SelectionSet',\n                          selections: [\n                            {kind: 'Field', name: {kind: 'Name', value: 'category'}},\n                            {kind: 'Field', name: {kind: 'Name', value: 'name'}},\n                            {kind: 'Field', name: {kind: 'Name', value: '__typename'}},\n                          ],\n                        },\n                      },\n                      {kind: 'Field', name: {kind: 'Name', value: '__typename'}},\n                    ],\n                  },\n                },\n                {kind: 'Field', name: {kind: 'Name', value: '__typename'}},\n              ],\n            },\n          },\n        ],\n      },\n    },\n  ],\n} as unknown as DocumentNode<MetafieldDefinitionsByOwnerTypeQuery, MetafieldDefinitionsByOwnerTypeQueryVariables>\n"]}